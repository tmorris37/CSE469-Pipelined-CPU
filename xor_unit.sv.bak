// This code is written for CSE 469 Lab 2, Summer 2024
// Copyright @ 2024 Jason Zhao, Timothy Morris

// The following code 64-bit xor gate which also resposible for setting the flags negative, zero, overflow, and carry_out

`timescale 1ns/10ps
module xor_unit (A, B, result, zero, negative, overflow, carryout);

	input  logic [63:0] A, B;
	output logic [63:0] result;
	output logic zero, negative, overflow, carryout;

	genvar i;
	generate 
	  for (i = 0; i < 64; i = i + 1) begin: generated_xor
			xor #10 (result[i], A[i], B[i]);
	  end
	endgenerate

	// set flags
	assign negative = result[63];
	
	logic not_zero;
	or64_1 or_gate_64 (.in(result), .out(not_zero));
	not #10 (zero, not_zero);

endmodule  // xor_unit
